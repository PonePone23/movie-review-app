/ This block is for including stylesheet and javascript
- content_for :head do
  = stylesheet_link_tag "movie/index",as:"style"
  = javascript_include_tag 'filter', as:"script"

/ Section for showing list of movies
.inner-width.container-fluid.sec-home.search
  h2.mt-5 Upcoming Releases
  -if @upcoming_movies.nil? || @upcoming_movies.empty?
    p.search-txt There is no upcoming movie!
  else
    - movies_slices = @upcoming_movies.group_by { |movie| [movie.release_date.year, movie.release_date.month] }.sort().each_slice(12)
    - movies_slices.each_with_index do |movies_slice, index|
      - movies_slice.each do |year_month, movies_in_month|
        - if movies_in_month.size > 6
          .row.m-0.mt-3.pc-view
          .sec-popular-movies.like-heading.pc-view.justify-content-between.align-items-center
            h3 #{Date::MONTHNAMES[year_month[1]]} #{year_month[0]}
            div.d-flex.justify-content-end
              div
                button.previous(type="button" data-bs-target="#movieCarousel" data-bs-slide="prev")
                  span.carousel-control-prev-icon(aria-hidden="true")
                  span.visually-hidden Previous
                button.next(type="button" data-bs-target="#movieCarousel" data-bs-slide="next")
                  span.carousel-control-next-icon(aria-hidden="true")
                  span.visually-hidden Next
          .carousel.slide.pc-view#movieCarousel(data-ride="carousel")
            .carousel-inner
              - movies_in_month.each_slice(6) do |movie_group|
                .carousel-item(class=(movie_group == movies_in_month.first(6) ? 'active' : ''))
                  .row
                    - movie_group.each do |movie|
                      .col-md-3.col-lg-2.col-4
                        = link_to movie do
                          .home-card.card.border-0.bg-transparent.mt-1
                            = image_tag url_for(movie.image), class: "card-img-top" if movie.image.attached?
                            .card-body
                              - if movie.ratings.present?
                                - average_rating = movie.ratings.average(:rating)
                                - filled_stars = average_rating.round(1).to_i
                                - (filled_stars).times do
                                  = image_tag 'star.svg', class: 'star-icon'
                                - (5 - filled_stars).times do
                                  = image_tag 'empty-star.svg', class: 'star-icon'
                              - else
                                - 5.times do
                                  = image_tag 'empty-star.svg', class: 'star-icon'
                              h5.card-title
                                = link_to movie.name, movie
                              p.card-text
                                = link_to movie.duration, movie
                                .row.m-0.mt-5.pc-view
          .sec-popular-movies.like-heading.ph-view.justify-content-between.align-items-center
            h3 #{Date::MONTHNAMES[year_month[1]]} #{year_month[0]}
            div.d-flex.justify-content-end.w-50
              div
                button.previous(type="button" data-bs-target="#phmovieCarousel" data-bs-slide="prev")
                  span.carousel-control-prev-icon(aria-hidden="true")
                  span.visually-hidden Previous
                button.next(type="button" data-bs-target="#phmovieCarousel" data-bs-slide="next")
                  span.carousel-control-next-icon(aria-hidden="true")
                  span.visually-hidden Next
          .carousel.slide.ph-view#phmovieCarousel(data-ride="carousel")
            .carousel-inner
              - movies_in_month.each_slice(3) do |movie_group|
                .carousel-item(class=(movie_group == movies_in_month.first(3) ? 'active' : ''))
                  .row
                    - movie_group.each do |movie|
                      .col-md-3.col-lg-2.col-4.mb-3
                        = link_to movie do
                          .home-card.card.border-0.bg-transparent.mt-1
                            = image_tag url_for(movie.image), class: "card-img-top" if movie.image.attached?
                             - if current_user
                                .save-movie
                                    - if current_user && current_user.saved_movies.map(&:movie_id).include?(movie.id)
                                        = link_to({ action: :unsave, id: movie.id }, method: :post) do
                                          = image_tag 'saved_bookmark.svg', class: "bookmark",title: "Unsave movie?"
                                    - else
                                        = link_to({ action: :save, id: movie.id }, method: :post) do
                                          = image_tag 'unsaved_bookmark.svg', class: "bookmark",title: "Save movie?"
                            .card-body
                              - if movie.ratings.present?
                                - average_rating = movie.ratings.average(:rating)
                                - filled_stars = average_rating.round(1).to_i
                                - (filled_stars).times do
                                  = image_tag 'star.svg', class: 'star-icon'
                                - (5 - filled_stars).times do
                                  = image_tag 'empty-star.svg', class: 'star-icon'
                              - else
                                - 5.times do
                                  = image_tag 'empty-star.svg', class: 'star-icon'
                              h5.card-title
                                = link_to movie.name, movie
                              p.card-text
                                = link_to movie.duration, movie
        - else
          .mt-3
            h3 #{Date::MONTHNAMES[year_month[1]]} #{year_month[0]}
          .row.mt-3
            - movies_in_month.each do |movie|
              .col-md-3.col-lg-2.col-4.mb-3
                = link_to movie do
                  .home-card.card.border-0.bg-transparent.mt-1.mb-3
                    = image_tag url_for(movie.image), class: "card-img-top" if movie.image.attached?
                    .card-body
                      - if movie.ratings.present?
                        - average_rating = movie.ratings.average(:rating)
                        - filled_stars = average_rating.round(1).to_i
                        - (filled_stars).times do
                          = image_tag 'star.svg', class: 'star-icon'
                        - (5 - filled_stars).times do
                          = image_tag 'empty-star.svg', class: 'star-icon'
                      - else
                        - 5.times do
                          = image_tag 'empty-star.svg', class: 'star-icon'
                      h5.card-title
                        = link_to movie.name, movie
                      p.card-text
                        = link_to movie.duration, movie
javascript:
  document.addEventListener('turbo:load', function() {
     var carousels = document.querySelectorAll('#movieCarousel, #phmovieCarousel');
    carousels.forEach(function(carousel) {
      var carouselInstance = new bootstrap.Carousel(carousel, {
        interval: 4000,
        wrap: true
      });

      // Auto slide the carousel after the document is loaded
      var carouselInterval = setInterval(function() {
        carouselInstance.next();
      }, 4000);
    });
  });
